name: Tests

on:
  push:
    branches:
      - "master"

  pull_request:
    branches:
      - "*"

jobs:
  tests:
    name: Tests (Python ${{ matrix.python-version }} / EdgeDB ${{ matrix.edgedb-version }})

    runs-on: ubuntu-18.04

    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"

        edgedb-version:
          - "1.0"

    steps:
      - uses: actions/checkout@v3

      - uses: edgedb/setup-edgedb@v1
        with:
          server-version: ${{ matrix.edgedb-version }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: "1.2.2"
          virtualenvs-in-project: true

      - name: Set up cache
        uses: actions/cache@v3.0.11
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-py-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run tests
        run: poetry run nox -s test

      - uses: codecov/codecov-action@v3

  result:
    name: Tests conclusion

    needs: tests

    runs-on: ubuntu-18.04

    steps:
      - run: "echo 'Completed!'"
